<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[Bravo Kernel]]></title>
  
  <link href="/atom.xml" rel="self"/>
  <link href="http://bravo-kernel.com/"/>
  <updated>2015-04-12T17:47:04.000Z</updated>
  <id>http://bravo-kernel.com/</id>
  
  <author>
    <name><![CDATA[bravo-kernel]]></name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[How to use a CakePHP 3 REST API]]></title>
    <link href="http://bravo-kernel.com/2015/04/how-to-use-a-cakephp-3-rest-api/"/>
    <id>http://bravo-kernel.com/2015/04/how-to-use-a-cakephp-3-rest-api/</id>
    <published>2015-04-12T13:10:24.000Z</published>
    <updated>2015-04-12T17:47:04.000Z</updated>
    <content type="html"><![CDATA[<p>In this follow-up post to <a href="/2015/04/how-to-build-a-cakephp-3-rest-api-in-minutes/">How to build a CakePHP 3 REST API in minutes</a> we explore the inner workings of our new API by:</p>
<ol>
<li>Adding some tasty cocktail data to our application (already listening at <code>http://cake3api.app</code>)</li>
<li>Learning how to access our API resources using:<ul>
<li>index action (GET)</li>
<li>view action (GET)</li>
<li>add action (POST)</li>
<li>edit/update action (PUT)</li>
<li>delete action (DELETE)</li>
</ul>
</li>
<li>Configuring Pagination</li>
<li>Testing Querystring Parameters</li>
</ol>
<p><em>Application sources available <a href="https://github.com/bravo-kernel/examples/tree/master/blog-how-to-use-a-cakephp3-rest-api" target="_blank" rel="external">here</a>.</em></p>
<h2 id="1-_Adding_The_Cocktails">1. Adding The Cocktails</h2><h3 id="Populate_the_database">Populate the database</h3><p>Download this CakePHP <a href="https://github.com/bravo-kernel/examples/blob/master/blog-how-to-use-a-cakephp3-rest-api/config/Migrations/20150411161731_initial.php" target="_blank" rel="external">database migration file</a> to your <code>config/Migrations</code> directory.</p>
<p>Create and popuplate the <code>cocktails</code> table by running the following command inside your application’s root directory:</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bin/cake migrations migrate</span><br></pre></td></tr></table></figure>
<h3 id="Create_the_controller">Create the controller</h3><p>Create new file <code>src/Controller/CocktailsController.php</code> with the following content:</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">App</span>\<span class="title">Controller</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">App</span>\<span class="title">Controller</span>\<span class="title">AppController</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CocktailsController</span> <span class="keyword">extends</span> <span class="title">AppController</span></span><br><span class="line"></span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="Create_models_and_views">Create models and views</h3><p>Generate some basic models and views by running the following commands inside your application’s root directory:</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">bin/cake bake model Cocktails</span><br><span class="line">bin/cake bake template Cocktails</span><br></pre></td></tr></table></figure>
<h3 id="Confirm">Confirm</h3><p>You are ready to start testing your API if browsing to <code>http://cake3api.app/cocktails</code> looks similar to:<br><br></p>
<img src="/2015/04/how-to-use-a-cakephp-3-rest-api/browser-cocktails-index.png">
<h2 id="2-_Accessing_API_Resources">2. Accessing API Resources</h2><p>Your API supports accessing resources with or without the .json/.xml extensions and we will test both where applicable.</p>
<p>If you don’t have a client capable of testing Request Headers you might consider using:</p>
<ul>
<li>the <a href="https://addons.mozilla.org/nl/firefox/addon/restclient/" target="_blank" rel="external">RESTClient</a> plugin for Firefox</li>
<li>the <a href="https://chrome.google.com/webstore/detail/postman-rest-client/fdmmgilgnpjigdojojpjoooidkmcomcm" target="_blank" rel="external">Postman</a> plugin for Chrome</li>
</ul>
<blockquote>
<p><strong>Note:</strong> we will only be testing JSON for brevity.</p>
</blockquote>
<h3 id="Index_action_(GET)">Index action (GET)</h3><p>Retrieve a JSON list of cocktails from your API by either:</p>
<ul>
<li>retrieving directly from <code>http://cake3api.app/cocktails.json</code></li>
<li>querying <code>http://cake3api.app/cocktails</code> using:<ul>
<li><strong>HTTP Method</strong> <code>GET</code></li>
<li><strong>Accept-Header</strong> <code>application/json</code></li>
</ul>
</li>
</ul>
<p>Will return Status Code 200 (Success) on success.</p>
<p><br></p>
<img src="/2015/04/how-to-use-a-cakephp-3-rest-api/api-request-headers-index.png">
<h3 id="View_action_(GET)">View action (GET)</h3><p>Retrieve JSON details for a single cocktail from your API by either:</p>
<ul>
<li>retrieving directly from <code>http://cake3api.app/cocktails/5.json</code></li>
<li>querying <code>http://cake3api.app/cocktails/5</code> using:<ul>
<li><strong>HTTP Method</strong> <code>GET</code></li>
<li><strong>Accept-Header</strong> <code>application/json</code></li>
</ul>
</li>
</ul>
<p>Will return Status Code 200 (Success) on success.</p>
<p><br></p>
<img src="/2015/04/how-to-use-a-cakephp-3-rest-api/api-request-headers-view.png">
<h3 id="Add_action_(POST)">Add action (POST)</h3><p>Add a new cocktail by posting JSON data to your API using:</p>
<ul>
<li>The index URL <code>http://cake3api.app/cocktails</code></li>
<li><strong>HTTP Method</strong> <code>POST</code></li>
<li><strong>Accept-Header</strong> <code>application/json</code></li>
<li><strong>Content-Type</strong> <code>application/json</code></li>
<li>Body data in (absolutely) correct JSON format</li>
</ul>
<p>Will return Status Code 201 (Created) on success as well as the <strong>id of the created cocktail</strong> in the response body.</p>
<p><br></p>
<img src="/2015/04/how-to-use-a-cakephp-3-rest-api/api-request-headers-add.png">
<h3 id="Edit/Update_action_(PUT)">Edit/Update action (PUT)</h3><p>Change an existing cocktail by posting JSON data to our API using:</p>
<ul>
<li>The view URL for the specific recipe <code>http://cake3api.app/cocktails/5</code></li>
<li><strong>HTTP Method</strong> <code>PUT</code></li>
<li><strong>Accept-Header</strong> <code>application/json</code></li>
<li><strong>Content-Type</strong> <code>application/json</code></li>
<li>Partial or full body data in (absolutely) correct JSON format</li>
</ul>
<p>Will return Status Code 200 (Success) on success.</p>
<p><br></p>
<img src="/2015/04/how-to-use-a-cakephp-3-rest-api/api-request-headers-edit.png">
<h3 id="Delete_action_(DELETE)">Delete action (DELETE)</h3><p>Delete an existing cocktail using your API by using:</p>
<ul>
<li>The view URL for the specific cocktail, e.g. <code>http://cake3api.app/cocktails/5</code></li>
<li><strong>HTTP Method</strong> <code>DELETE</code></li>
<li><strong>Accept-Header</strong> <code>application/json</code></li>
</ul>
<p>Will return Status Code 200 (Success) on success.</p>
<p><br></p>
<img src="/2015/04/how-to-use-a-cakephp-3-rest-api/api-request-headers-delete.png">
<h2 id="3-_Configuring_Pagination">3. Configuring Pagination</h2><p>Let’s change some of the PaginatorComponent settings in <code>src/Controller/AppController.php</code> used by your API in preparation for querystring parameter testing.</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">'Paginator'</span> =&gt; [</span><br><span class="line">    <span class="string">'page'</span> =&gt; <span class="number">1</span>,</span><br><span class="line">    <span class="string">'limit'</span> =&gt; <span class="number">10</span>,</span><br><span class="line">    <span class="string">'maxLimit'</span> =&gt; <span class="number">100</span>,</span><br><span class="line">    <span class="string">'sortWhitelist'</span> =&gt; [</span><br><span class="line">        <span class="string">'id'</span>, <span class="string">'name'</span>, <span class="string">'description'</span></span><br><span class="line">    ]</span><br><span class="line">]</span><br></pre></td></tr></table></figure>
<h3 id="Show_less_cocktails_per_page">Show less cocktails per page</h3><p>Show only show 5 cocktails per page by changing <code>limit =&gt; 10</code> to <code>limit =&gt; 5</code>.</p>
<h3 id="Set_maximum_number_of_cocktails_per_page">Set maximum number of cocktails per page</h3><p>Never show more than 15 cocktails by changing <code>&#39;maxLimit&#39; =&gt; 100</code> to <code>&#39;maxLimit&#39; =&gt; 15</code>.</p>
<h3 id="Prevent_sorting_by_description">Prevent sorting by description</h3><p>Prevent users from sorting by the description field by removing <code>description</code> from the <code>sortWhitelist</code> array.</p>
<h3 id="Default_page">Default page</h3><p>Do NOT change the default <code>page</code> used for the index resultset to prevent frustrating further tests.</p>
<h2 id="4-_Testing_Querystring_Parameters">4. Testing Querystring Parameters</h2><p>Your API comes with support for querystring parameters that clients can use to manipulate the output produced by your API.</p>
<h3 id="Limiting_results">Limiting results</h3><p>Clients can use the <code>limit</code> parameter to manipulate the number of records returned by your API.</p>
<p>To verify the parameter works as expected query <code>http://cake3api.app/cocktails.json?limit=3</code>.</p>
<p>The result should list three cocktails instead of (the now default) five.</p>
<h3 id="Rate_limiting">Rate limiting</h3><p>To verify your API is respecting the <code>maxLimit</code> Paginator setting query <code>http://cake3api.app/cocktails.json?limit=20</code>.</p>
<p>The result should only list 15 cocktails.</p>
<h3 id="Sorting_by_field">Sorting by field</h3><p>Clients can use the <code>sort</code> parameter to specify which field should be used to sort the results produced by your API. </p>
<p>To verify the parameter is working as expected query <code>http://cake3api.app/cocktails.json?sort=name</code>.</p>
<p>The results should be sorted by cocktail name.</p>
<h3 id="Sorting_ascending/descending">Sorting ascending/descending</h3><p>Clients can use the <code>direction</code> parameter <strong>in combination</strong> with the <code>sort</code> parameter to specify the direction in which results are sorted by your API (either <code>asc</code> or <code>desc</code>). </p>
<p>To verify the parameter is working as expected query <code>http://cake3api.app/cocktails.json?sort=name&amp;direction=desc</code>.</p>
<p>The results should be reverse-sorted by cocktail name.</p>
<h3 id="Sort_whitelist">Sort whitelist</h3><p>To verify your API is respecting the <code>sortWhitelist</code> Paginator setting query <code>http://cake3api.app/cocktails.json?sort=description</code>.</p>
<p>The result should show the default (non-sorted) index results since we removed <code>description</code> from the sortWhitelist array.</p>
<h2 id="Additional_reading">Additional reading</h2><ul>
<li><a href="http://book.cakephp.org/3.0/en/controllers/components/pagination.html" target="_blank" rel="external">CakePHP 3 Pagination</a></li>
<li><a href="https://github.com/ADmad/cakephp-jwt-auth" target="_blank" rel="external">Securing your API using JWT authentication</a></li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<p>In this follow-up post to <a href="/2015/04/how-to-build-a-cakephp-3-rest-api-in-minutes/">How to build a CakePHP 3 REST API in minutes</]]>
    </summary>
    
      <category term="api" scheme="http://bravo-kernel.com/tags/api/"/>
    
      <category term="cakephp" scheme="http://bravo-kernel.com/tags/cakephp/"/>
    
      <category term="cakephp3" scheme="http://bravo-kernel.com/tags/cakephp3/"/>
    
      <category term="rest" scheme="http://bravo-kernel.com/tags/rest/"/>
    
      <category term="CakePHP" scheme="http://bravo-kernel.com/categories/cakephp/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[How to build a CakePHP 3 REST API in minutes]]></title>
    <link href="http://bravo-kernel.com/2015/04/how-to-build-a-cakephp-3-rest-api-in-minutes/"/>
    <id>http://bravo-kernel.com/2015/04/how-to-build-a-cakephp-3-rest-api-in-minutes/</id>
    <published>2015-04-12T11:22:21.000Z</published>
    <updated>2015-04-12T19:38:00.000Z</updated>
    <content type="html"><![CDATA[<p>Step-by-step instructions for creating a full featured RESTful API using CakePHP 3.</p>
<h2 id="1-_Create_The_Application">1. Create The Application</h2><p>For this tutorial (and the follow-up posts) we will create a fresh CakePHP 3 application for our API:</p>
<ul>
<li>named <code>cake3api.app</code></li>
<li>connected to a database named <code>cake3api_app</code></li>
<li>exposed using virtualhost <code>http://cake3api.app</code></li>
</ul>
<p>If you need help with the installation either:</p>
<ul>
<li>follow the detailed installation instructions of <a href="http://book.cakephp.org/3.0/en/tutorials-and-examples/blog/blog.html#blog-tutorial" target="_blank" rel="external">the CakePHP Blog Tutorial</a></li>
<li>install <a href="https://github.com/alt3/cakebox" target="_blank" rel="external">cakebox</a> and run <code>cakebox application add cake3api.app</code> to set up the application, database and virtual host</li>
</ul>
<h2 id="2-_Add_the_CRUD_plugin">2. Add the CRUD plugin</h2><p>Add the <a href="https://github.com/FriendsOfCake/crud" target="_blank" rel="external">CRUD plugin</a> to your application so your API will benefit of additional functionality like pagination, thin controllers and DRY best practices.</p>
<p>Run the following command inside your application’s root directory to Composer install the plugin:</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">composer require friendsofcake/crud:dev-cake3</span><br></pre></td></tr></table></figure>
<p>Now run the following command to make sure your application will use the plugin:</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bin/cake plugin load Crud</span><br></pre></td></tr></table></figure>
<h2 id="3-_Enable_the_API">3. Enable the API</h2><h3 id="a)_Expose_one_or_more_controllers">a) Expose one or more controllers</h3><p>Only controllers explicitly enabled for API use will be accessible through your API. </p>
<p>Enable controllers using the <code>resources()</code> method <strong>inside</strong> the / scope definition in your <code>config/routes.php</code> file like this:</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Router::scope(<span class="string">'/'</span>, <span class="function"><span class="keyword">function</span> <span class="params">(<span class="variable">$routes</span>)</span> </span>&#123;</span><br><span class="line">	<span class="variable">$routes</span>-&gt;resources(<span class="string">'Users'</span>);</span><br><span class="line">	<span class="variable">$routes</span>-&gt;resources(<span class="string">'Cocktails'</span>);</span><br><span class="line">...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="b)_Configure_the_API">b) Configure the API</h3><p>Make the default API configuration available to all controllers in your application by replacing the content of your <code>src/Controller/AppController.php</code> file with:</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">App</span>\<span class="title">Controller</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">Cake</span>\<span class="title">Controller</span>\<span class="title">Controller</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AppController</span> <span class="keyword">extends</span> <span class="title">Controller</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">use</span> \<span class="title">Crud</span>\<span class="title">Controller</span>\<span class="title">ControllerTrait</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$components</span> = [</span><br><span class="line">        <span class="string">'RequestHandler'</span>,</span><br><span class="line">        <span class="string">'Crud.Crud'</span> =&gt; [</span><br><span class="line">            <span class="string">'actions'</span> =&gt; [</span><br><span class="line">                <span class="string">'Crud.Index'</span>,</span><br><span class="line">                <span class="string">'Crud.View'</span>,</span><br><span class="line">                <span class="string">'Crud.Add'</span>,</span><br><span class="line">                <span class="string">'Crud.Edit'</span>,</span><br><span class="line">                <span class="string">'Crud.Delete'</span></span><br><span class="line">            ],</span><br><span class="line">            <span class="string">'listeners'</span> =&gt; [</span><br><span class="line">                <span class="string">'Crud.Api'</span>,</span><br><span class="line">                <span class="string">'Crud.ApiPagination'</span>,</span><br><span class="line">                <span class="string">'Crud.ApiQueryLog'</span></span><br><span class="line">            ]</span><br><span class="line">        ],</span><br><span class="line">        <span class="string">'Paginator'</span> =&gt; [</span><br><span class="line">            <span class="string">'page'</span> =&gt; <span class="number">1</span>,</span><br><span class="line">            <span class="string">'limit'</span> =&gt; <span class="number">10</span>,</span><br><span class="line">            <span class="string">'maxLimit'</span> =&gt; <span class="number">100</span>,</span><br><span class="line">            <span class="string">'sortWhitelist'</span> =&gt; [</span><br><span class="line">                <span class="string">'id'</span>, <span class="string">'name'</span>, <span class="string">'description'</span></span><br><span class="line">            ]</span><br><span class="line">        ]</span><br><span class="line">    ];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="c)_Optionally_enable_extensions">c) Optionally enable extensions</h3><p>Your API resources are already fully accessible using Request Headers and <strong>require no additional configuration</strong>.</p>
<p>However… if you want to additionally allow access to API resources using the <a href="http://book.cakephp.org/3.0/en/development/routing.html#routing-file-extensions" target="_blank" rel="external">.json and .xml extensions</a> open your <code>config/routes.php</code> file and add the following line directly above the / scope definition:</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Router::extensions([<span class="string">'json'</span>, <span class="string">'xml'</span>]);</span><br></pre></td></tr></table></figure>
<h2 id="Stop_The_Clock!">Stop The Clock!</h2><p>That’s all, you should now be able to browse to <code>http://cake3api.app/index.json</code> and be presented with your API’s first JSON (error) response looking like this:</p>
<figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    "<span class="attribute">message</span>": <span class="value"><span class="string">"Controller class Index could not be found."</span></span>,</span><br><span class="line">    "<span class="attribute">url</span>": <span class="value"><span class="string">"\/index.json"</span></span>,</span><br><span class="line">    "<span class="attribute">code</span>": <span class="value"><span class="number">404</span></span><br><span class="line"></span>&#125;</span><br></pre></td></tr></table></figure>
<p>Quite impressive but in all fairness… even though you now have a (very) cool API that only took minutes to create it is still pretty useless without any meaningful data to serve so this might be a good moment to dive straight into this follow-up post:</p>
<blockquote>
<p><a href="/2015/04/how-to-use-a-cakephp-3-rest-api/">How to use a CakePHP3 REST API</a></p>
</blockquote>
<h2 id="Additional_reading">Additional reading</h2><ul>
<li><a href="http://crud.readthedocs.org" target="_blank" rel="external">CRUD plugin documentation</a></li>
<li><a href="https://github.com/ADmad/cakephp-jwt-auth" target="_blank" rel="external">Securing your CakePHP 3 API using JWT authentication</a></li>
<li><a href="http://book.cakephp.org/3.0/en/development/routing.html#prefix-routing" target="_blank" rel="external">Limiting API access to an /api prefixed route</a></li>
<li><a href="http://book.cakephp.org/3.0/en/controllers/components/pagination.html" target="_blank" rel="external">CakePHP 3 Pagination</a></li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<p>Step-by-step instructions for creating a full featured RESTful API using CakePHP 3.</p>
<h2 id="1-_Create_The_Application">1. Create The ]]>
    </summary>
    
      <category term="api" scheme="http://bravo-kernel.com/tags/api/"/>
    
      <category term="cakephp" scheme="http://bravo-kernel.com/tags/cakephp/"/>
    
      <category term="cakephp3" scheme="http://bravo-kernel.com/tags/cakephp3/"/>
    
      <category term="rest" scheme="http://bravo-kernel.com/tags/rest/"/>
    
      <category term="CakePHP" scheme="http://bravo-kernel.com/categories/cakephp/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Creating proper Github releases]]></title>
    <link href="http://bravo-kernel.com/2015/03/creating-proper-github-releases/"/>
    <id>http://bravo-kernel.com/2015/03/creating-proper-github-releases/</id>
    <published>2015-03-27T19:30:00.000Z</published>
    <updated>2015-04-12T11:18:14.000Z</updated>
    <content type="html"><![CDATA[<p>Step-by-step instructions for creating Github Releases like the pros.</p>
<p>Assuming:</p>
<ul>
<li>a <code>master</code> branch</li>
<li>a more-or-less stable <code>dev</code> branch ready to be merged into master</li>
<li>a <code>VERSION.txt</code> file holding release version</li>
</ul>
<p><strong>Pro Tip:</strong> keep release cycles short, release often!</p>
<h2 id="Creating_the_release">Creating the release</h2><ol>
<li>create <code>VERSION.txt</code> in your dev branch and fill it with the release number (e.g. 1.0-alpha1)</li>
<li>merge the master branch into dev</li>
<li>merge the dev branch back into master</li>
<li>go to the Github page holding your project and:<ul>
<li>select <em>releases</em></li>
<li>select <em>Draft a new release</em></li>
<li>fill in 1.0-alpha1 as the <em>Tag version</em> </li>
<li>target the master branch</li>
<li>doublecheck before pressing the “Publish release” button</li>
</ul>
</li>
</ol>
<p>That’s all there’s too it, your first release. </p>
<p><strong>Note:</strong> to prevent future merge conflicts caused by e.g. bugfixes… regularly merge master into dev!</p>
<h2 id="Starting_work_on_the_next_release">Starting work on the next release</h2><p>Now that the release is out, it’s time to start work on the next one</p>
<ol>
<li>update <code>VERSION.txt</code> in the dev branch with the next release number (e.g. 1.0-alpha2)</li>
<li>commit and push change to dev</li>
<li>add features to your dev branch</li>
</ol>
<p>Once you are ready to publish a new release… simply restart <code>Creating the release</code> but skip step 1.</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>Step-by-step instructions for creating Github Releases like the pros.</p>
<p>Assuming:</p>
<ul>
<li>a <code>master</code> branch</li>
<li]]>
    </summary>
    
      <category term="git" scheme="http://bravo-kernel.com/tags/git/"/>
    
      <category term="github" scheme="http://bravo-kernel.com/tags/github/"/>
    
      <category term="Git" scheme="http://bravo-kernel.com/categories/git/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Setting up Logstash 1.4.2 to forward Nginx logs to Elasticsearch]]></title>
    <link href="http://bravo-kernel.com/2014/12/setting-up-logstash-1-4-2-to-forward-nginx-logs-to-elasticsearch/"/>
    <id>http://bravo-kernel.com/2014/12/setting-up-logstash-1-4-2-to-forward-nginx-logs-to-elasticsearch/</id>
    <published>2014-12-21T14:13:25.000Z</published>
    <updated>2015-03-27T17:53:36.000Z</updated>
    <content type="html"><![CDATA[<p>Step-by-step instructions on how to configure Logstash v1.4.2 to forward your Nginx access logs to Elasticsearch v1.4.2.</p>
<h2 id="Create_a_custom_Nginx_log_format">Create a custom Nginx log format</h2><p>Add the following custom log_format to the <em>/etc/nginx/conf.d</em> file so it becomes available to all (virtual) Nginx hosts: </p>
<pre><code><span class="comment"># Custom logstash format</span>
<span class="title">log_format</span> logstash <span class="string">'<span class="variable">$http_host</span> '</span>
                    <span class="string">'<span class="variable">$remote_addr</span> [<span class="variable">$time_local</span>] '</span>
                    <span class="string">'"<span class="variable">$request</span>" <span class="variable">$status</span> <span class="variable">$body_bytes_sent</span> '</span>
                    <span class="string">'"<span class="variable">$http_referer</span>" "<span class="variable">$http_user_agent</span>" '</span>
                    <span class="string">'<span class="variable">$request_time</span> '</span>
                    <span class="string">'<span class="variable">$upstream_response_time</span>'</span>;
</code></pre><blockquote>
<p>Make sure to add this <strong>above</strong> the “# virtual hosting” directive to prevent nginx failing with “unkown log format” errors.</p>
</blockquote>
<h2 id="Enable_the_custom_Nginx_log_format">Enable the custom Nginx log format</h2><p>Update your nginx site configuration file(s) to start logging with the new custom log_format:</p>
<pre><code><span class="variable">#access_log</span> /<span class="built_in">var</span>/<span class="keyword">log</span>/nginx/access<span class="built_in">.</span><span class="keyword">log</span>;
access_log /<span class="built_in">var</span>/<span class="keyword">log</span>/nginx/access<span class="built_in">.</span><span class="keyword">log</span> logstash;
</code></pre><p>Restart nginx. </p>
<p>Check your access log(s) and confirm that entries no longer look like the first line below (default nginx format) but look similar to second one (using our custom logstash format):</p>
<pre><code><span class="number">10.33</span><span class="number">.10</span><span class="number">.1</span> - - [<span class="number">21</span>/<span class="keyword">Dec</span>/<span class="number">2014</span>:<span class="number">14</span>:<span class="number">36</span>:<span class="number">25</span> +<span class="number">0000</span>] <span class="string">"GET /test_126 HTTP/1.1"</span> <span class="number">404</span> <span class="number">6642</span> <span class="string">"-"</span> <span class="string">"Mozilla/5.0 (Windows NT 6.3; WOW64; rv:34.0) Gecko/20100101 Firefox/34.0"</span>
my.app <span class="number">10.33</span><span class="number">.10</span><span class="number">.1</span> [<span class="number">21</span>/<span class="keyword">Dec</span>/<span class="number">2014</span>:<span class="number">13</span>:<span class="number">58</span>:<span class="number">48</span> +<span class="number">0000</span>] <span class="string">"GET /test_126 HTTP/1.1"</span> <span class="number">404</span> <span class="number">6641</span> <span class="string">"-"</span> <span class="string">"Mozilla/5.0 (Windows NT 6.3; WOW64; rv:34.0) Gecko/20100101 Firefox/34.0"</span> <span class="number">2.465</span> <span class="number">2.465</span>
</code></pre><h2 id="Create_a_Logstash_nginx_pattern">Create a Logstash nginx pattern</h2><p>Create new file <em>/opt/logstash/server/patterns/nginx</em> with:</p>
<pre><code>NGUSERNAME [a-zA-Z<span class="string">\.\@\-\+_%]+</span>
NGUSER %{NGUSERNAME}
NGINXACCESS %{<span class="attribute">IPORHOST</span>:http_host} %{<span class="attribute">IPORHOST</span>:clientip} <span class="string">\[%{HTTPDATE:timestamp}\]</span> <span class="string">\"(?:%{WORD:verb}</span> %{<span class="attribute">NOTSPACE</span>:request}(?: HTTP/%{<span class="attribute">NUMBER</span>:httpversion})?|%{<span class="attribute">DATA</span>:rawrequest})<span class="string">\"</span> %{<span class="attribute">NUMBER</span>:response} (?:%{<span class="attribute">NUMBER</span>:bytes}|-) %{<span class="attribute">QS</span>:referrer} %{<span class="attribute">QS</span>:agent} %{<span class="attribute">NUMBER</span>:<span class="attribute">request_time</span>:float} %{<span class="attribute">NUMBER</span>:<span class="attribute">upstream_time</span>:float}
NGINXACCESS %{<span class="attribute">IPORHOST</span>:http_host} %{<span class="attribute">IPORHOST</span>:clientip} <span class="string">\[%{HTTPDATE:timestamp}\]</span> <span class="string">\"(?:%{WORD:verb}</span> %{<span class="attribute">NOTSPACE</span>:request}(?: HTTP/%{<span class="attribute">NUMBER</span>:httpversion})?|%{<span class="attribute">DATA</span>:rawrequest})<span class="string">\"</span> %{<span class="attribute">NUMBER</span>:response} (?:%{<span class="attribute">NUMBER</span>:bytes}|-) %{<span class="attribute">QS</span>:referrer} %{<span class="attribute">QS</span>:agent} %{<span class="attribute">NUMBER</span>:<span class="attribute">request_time</span>:float}    
</code></pre><p><strong>Notes:</strong></p>
<ul>
<li>by creating a pattern we keep our our logstash filters clean (simply referencing the pattern)</li>
<li>the first rule catches requests that are sent upstream</li>
<li>the second rule catches all static requests (where no upstream_response_time is available)</li>
</ul>
<blockquote>
<p>Pro tip: use the online <a href="https://grokdebug.herokuapp.com" target="_blank" rel="external">Grok Debugger</a> if you need to test/develop patterns.</p>
</blockquote>
<h2 id="Create_a_Logstash_configuration_file">Create a Logstash configuration file</h2><p>Create new file <em>/opt/logstash/server/etc/conf.d/nginx.conf</em> with:</p>
<pre><code>input {
  file {
    path =&gt; <span class="string">"/var/log/nginx/*access*"</span>
  }
}

filter {
  mutate { replace =&gt; { <span class="string">"type"</span> =&gt; <span class="string">"nginx_access"</span> } }
  grok {
    <span class="keyword">match</span> =&gt; { <span class="string">"message"</span> =&gt; <span class="string">"%{NGINXACCESS}"</span> }
  }
  date {
    <span class="keyword">match</span> =&gt; [ <span class="string">"timestamp"</span> , <span class="string">"dd/MMM/YYYY:HH:mm:ss Z"</span> ]
  }
  geoip {
    source =&gt; <span class="string">"clientip"</span>
  }
}

output {
  elasticsearch {
    host =&gt; <span class="string">"localhost"</span>
    protocol =&gt; <span class="string">"http"</span>
  }
  stdout { codec =&gt; rubydebug }
}
</code></pre><p><strong>Notes:</strong></p>
<ul>
<li>we change the timestamp to use the time the request arrived at the nginx server (instead of using the default which is the time the event was written to log, which is after the request has been processed)</li>
<li>all logentries will be indexed using Elasticsearch type “nginx_access”</li>
<li>we do NOT use the “index” directive in our output, all logentries will use Elasticsearch index “logstash-%{+YYYY.MM.dd}”</li>
</ul>
<blockquote>
<p>We MUST use the http protocol. By default Logstash will use the “node” protocol which joins Logstash as a participating node to the Elasticsearch cluster using it’s embedded ES library. Since that embedded version (1.1.1) is currently incompatible with version 1.4.2 it will cause issues all over the place like breaking Kibana due to incompatible nodes etc.</p>
</blockquote>
<h2 id="Start_logging_to_Elasticsearch">Start logging to Elasticsearch</h2><p>Manually test your new Logstash configuration by running:</p>
<pre><code><span class="regexp">/opt/</span>logstash<span class="regexp">/server/</span>bin<span class="regexp">/logstash -f /</span>opt<span class="regexp">/logstash/</span>server<span class="regexp">/etc/</span>conf.d<span class="regexp">/nginx.conf</span>
</code></pre><p>If your logs are appearing in Elasticsearch restart your logstash service. </p>
<h2 id="Credits">Credits</h2><p>Hat-tip to <a href="http://tech.ftbpro.com/post/92330141601/getting-the-best-out-of-logstash-for-nginx" target="_blank" rel="external">FTBpro developers</a> for the inspiration and the Logstash pattern</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>Step-by-step instructions on how to configure Logstash v1.4.2 to forward your Nginx access logs to Elasticsearch v1.4.2.</p>
<h2 id="Crea]]>
    </summary>
    
      <category term="elasticsearch" scheme="http://bravo-kernel.com/tags/elasticsearch/"/>
    
      <category term="logstash" scheme="http://bravo-kernel.com/tags/logstash/"/>
    
      <category term="nginx" scheme="http://bravo-kernel.com/tags/nginx/"/>
    
      <category term="Sysop" scheme="http://bravo-kernel.com/categories/sysop/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Kitchen converge re-run error on Windows against Vagrant with synced folder]]></title>
    <link href="http://bravo-kernel.com/2014/10/kitchen-converge-re-run-error-on-windows-against-vagrant-with-synced-folder/"/>
    <id>http://bravo-kernel.com/2014/10/kitchen-converge-re-run-error-on-windows-against-vagrant-with-synced-folder/</id>
    <published>2014-10-15T20:26:33.000Z</published>
    <updated>2015-03-27T17:53:36.000Z</updated>
    <content type="html"><![CDATA[<h2 id="The_case">The case</h2><p>Running <code>kitchen converge</code> on Windows using Chef-DK against a .kitchen.yml vagrant server with a synced folder:</p>
<ul>
<li>succeeds the first time</li>
<li>fails every following attempt stating there is <em>“No such file or directory”</em></li>
</ul>
<p>Strangely enough:</p>
<ul>
<li>the mentioned file does exist (both locally and remote)</li>
<li>manually deleting the mounted folder solves the problem</li>
</ul>
<h2 id="The_error">The error</h2><p>Where <code>kitchen converge</code> would normally display <em>“Removing non-cookbook files before transfer”</em> it now produces the following errors.</p>
<p><strong>On screen:</strong></p>
<pre><code>-----&gt; Starting Kitchen (v1.2.1)
-----&gt; Converging &lt;default-ubuntu-<span class="number">1404</span>&gt;<span class="keyword">...</span>
       Preparing files <span class="keyword">for</span> transfer
       Resolving cookbook dependencies with Berkshelf <span class="number">3.1</span><span class="number">.5</span><span class="keyword">...</span>
&gt;&gt;&gt;&gt;&gt;&gt; ------Exception-------
&gt;&gt;&gt;&gt;&gt;&gt; Class: Kitchen::ActionFailed
&gt;&gt;&gt;&gt;&gt;&gt; Message: Failed to complete <span class="comment">#converge action: [No such file or directory - C:/Users/bravo-kernel/AppData/Local/Temp/default-ubuntu-1404-sandbox-20141014-5236-n5f95k/cookbooks/vagrant-hexo/blogs/default-ubuntu-1404/demo/node_modules/hexo-renderer-stylus/node_modules/nib/node_modules/stylus/node_modules/glob/node_modules/inherits/inherits_browser.js]</span>
&gt;&gt;&gt;&gt;&gt;&gt; ----------------------
&gt;&gt;&gt;&gt;&gt;&gt; Please see .kitchen/logs/kitchen.log <span class="keyword">for</span> more details
&gt;&gt;&gt;&gt;&gt;&gt; Also <span class="keyword">try</span> running `kitchen diagnose --all` <span class="keyword">for</span> configuration
</code></pre><p><strong>.kitchen/logs/kitchen.log:</strong></p>
<pre><code>I, [<span class="number">2014</span>-<span class="number">10</span>-<span class="number">14</span>T18:<span class="number">09</span>:<span class="number">33.513287</span> <span class="hexcolor">#523</span>6]  INFO -- Kitchen: -----&gt; Starting Kitchen (v1.<span class="number">2.1</span>)
I, [<span class="number">2014</span>-<span class="number">10</span>-<span class="number">14</span>T18:<span class="number">09</span>:<span class="number">37.866034</span> <span class="hexcolor">#523</span>6]  INFO -- Kitchen: -----&gt; Converging &lt;default-ubuntu-<span class="number">1404</span>&gt;...
E, [<span class="number">2014</span>-<span class="number">10</span>-<span class="number">14</span>T18:<span class="number">09</span>:<span class="number">44.489123</span> <span class="hexcolor">#523</span>6] ERROR -- Kitchen: ------Exception-------
E, [<span class="number">2014</span>-<span class="number">10</span>-<span class="number">14</span>T18:<span class="number">09</span>:<span class="number">44.489123</span> <span class="hexcolor">#523</span>6] ERROR -- Kitchen: Class: Kitchen::ActionFailed
E, [<span class="number">2014</span>-<span class="number">10</span>-<span class="number">14</span>T18:<span class="number">09</span>:<span class="number">44.489123</span> <span class="hexcolor">#523</span>6] ERROR -- Kitchen: Message: Failed to complete <span class="id">#converge</span> action: [No such file or directory - C:/Users/bravo-kernel/AppData/Local/Temp/default-ubuntu-<span class="number">1404</span>-sandbox-<span class="number">20141014</span>-<span class="number">5236</span>-n5f95k/cookbooks/vagrant-hexo/blogs/default-ubuntu-<span class="number">1404</span>/demo/node_modules/hexo-renderer-stylus/node_modules/nib/node_modules/stylus/node_modules/glob/node_modules/inherits/inherits_browser.js]
E, [<span class="number">2014</span>-<span class="number">10</span>-<span class="number">14</span>T18:<span class="number">09</span>:<span class="number">44.489123</span> <span class="hexcolor">#523</span>6] ERROR -- Kitchen: ---Nested Exception---
E, [<span class="number">2014</span>-<span class="number">10</span>-<span class="number">14</span>T18:<span class="number">09</span>:<span class="number">44.489123</span> <span class="hexcolor">#523</span>6] ERROR -- Kitchen: Class: Errno::ENOENT
E, [<span class="number">2014</span>-<span class="number">10</span>-<span class="number">14</span>T18:<span class="number">09</span>:<span class="number">44.489123</span> <span class="hexcolor">#523</span>6] ERROR -- Kitchen: Message: No such file or directory - C:/Users/bravo-kernel/AppData/Local/Temp/default-ubuntu-<span class="number">1404</span>-sandbox-<span class="number">20141014</span>-<span class="number">5236</span>-n5f95k/cookbooks/vagrant-hexo/blogs/default-ubuntu-<span class="number">1404</span>/demo/node_modules/hexo-renderer-stylus/node_modules/nib/node_modules/stylus/node_modules/glob/node_modules/inherits/inherits_browser<span class="class">.js</span>
E, [<span class="number">2014</span>-<span class="number">10</span>-<span class="number">14</span>T18:<span class="number">09</span>:<span class="number">44.489123</span> <span class="hexcolor">#523</span>6] ERROR -- Kitchen: ------Backtrace-------
</code></pre><h2 id="The_cause">The cause</h2><p>The reason is so obvious one might never consider it at all:</p>
<blockquote>
<p>The path to the non-cookbook file to be deleted exceeds the maximum of 255 characters supported by the Windows platform causing the kitchen delete command to fail.</p>
</blockquote>
<h2 id="The_solution">The solution</h2><p>Since there does not seem to be a solid solution (yet) resort to one of the following workarounds:</p>
<ul>
<li>shortening the path by moving the user’s sandbox directory to a higher level (e.g. directly unde    r C:)</li>
<li>shortening the path by changing the directory structure on the remote node</li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="The_case">The case</h2><p>Running <code>kitchen converge</code> on Windows using Chef-DK against a .kitchen.yml vagrant server with ]]>
    </summary>
    
      <category term="chef-dk" scheme="http://bravo-kernel.com/tags/chef-dk/"/>
    
      <category term="kitchen" scheme="http://bravo-kernel.com/tags/kitchen/"/>
    
      <category term="vagrant" scheme="http://bravo-kernel.com/tags/vagrant/"/>
    
      <category term="Sysop" scheme="http://bravo-kernel.com/categories/sysop/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[How to fix Shellshock Bash Vulnerability using Chef]]></title>
    <link href="http://bravo-kernel.com/2014/09/how-to-fix-shellshock-bash-vulnerability-using-chef/"/>
    <id>http://bravo-kernel.com/2014/09/how-to-fix-shellshock-bash-vulnerability-using-chef/</id>
    <published>2014-09-28T20:07:09.000Z</published>
    <updated>2015-03-27T17:53:36.000Z</updated>
    <content type="html"><![CDATA[<p>Two copy-paste solutions for your recipes that will:</p>
<ul>
<li>make your Chef deployed servers <a href="http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2014-6271" target="_blank" rel="external">Shellshock</a> proof</li>
<li>display <code>shellshock-fix</code> during provisioning to make you look good as a bonus</li>
</ul>
<h2 id="Using_package">Using package</h2><p>Place anywhere after your <code>apt-get update</code> action.</p>
<pre><code>package <span class="string">'shellshock-fix'</span> <span class="keyword">do</span>
  package_name <span class="string">'bash'</span>
  action <span class="symbol">:upgrade</span>
<span class="keyword">end</span>
</code></pre><h2 id="Using_execute">Using execute</h2><p>Place anywhere.</p>
<pre><code>execute <span class="string">"shellshock-fix"</span> <span class="built_in">do</span>
  <span class="command"><span class="keyword">command</span> <span class="string">'apt-get update &amp;&amp; sudo apt-get install --only-upgrade bash'</span></span>
  action :run
<span class="function"><span class="keyword">end</span></span>
</code></pre>]]></content>
    <summary type="html">
    <![CDATA[<p>Two copy-paste solutions for your recipes that will:</p>
<ul>
<li>make your Chef deployed servers <a href="http://web.nvd.nist.gov/view/v]]>
    </summary>
    
      <category term="chef" scheme="http://bravo-kernel.com/tags/chef/"/>
    
      <category term="shellshock" scheme="http://bravo-kernel.com/tags/shellshock/"/>
    
      <category term="Sysop" scheme="http://bravo-kernel.com/categories/sysop/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[How to set up PHPCS with CakePHP coding standard on Ubuntu]]></title>
    <link href="http://bravo-kernel.com/2014/09/how-to-set-up-phpcs-with-cakephp-coding-standard-on-ubuntu/"/>
    <id>http://bravo-kernel.com/2014/09/how-to-set-up-phpcs-with-cakephp-coding-standard-on-ubuntu/</id>
    <published>2014-09-01T08:41:23.000Z</published>
    <updated>2015-03-27T17:53:36.000Z</updated>
    <content type="html"><![CDATA[<p>Install required package</p>
<pre><code>sudo apt-<span class="keyword">get</span> install php-codesniffer
</code></pre><p>Install the <a href="https://github.com/cakephp/cakephp-codesniffer" title="CakePHP Coding Standard" target="_blank" rel="external">CakePHP Coding Standard</a></p>
<pre><code>$ sudo pear channel-discover pear<span class="class">.cakephp</span><span class="class">.org</span>
$ sudo pear install cakephp/CakePHP_CodeSniffer
</code></pre><h3 id="Usage">Usage</h3><pre><code>$ cd /<span class="built_in">var</span>/repos
$ cd <span class="subst">&lt;</span>your<span class="attribute">-repo</span><span class="subst">&gt;</span>
$ phpcs app <span class="attribute">-p</span> <span class="subst">--</span>extensions<span class="subst">=</span>php <span class="subst">--</span>standard<span class="subst">=</span>CakePHP
<span class="attribute">...</span><span class="attribute">...</span><span class="attribute">...</span><span class="attribute">...</span><span class="attribute">...</span><span class="attribute">...</span><span class="attribute">...</span><span class="attribute">...</span><span class="attribute">...</span><span class="attribute">...</span><span class="attribute">...</span><span class="attribute">...</span><span class="attribute">...</span><span class="attribute">...</span><span class="attribute">...</span><span class="attribute">...</span><span class="attribute">...</span>
</code></pre>]]></content>
    <summary type="html">
    <![CDATA[<p>Install required package</p>
<pre><code>sudo apt-<span class="keyword">get</span> install php-codesniffer
</code></pre><p>Install the <a ]]>
    </summary>
    
      <category term="cakephp" scheme="http://bravo-kernel.com/tags/cakephp/"/>
    
      <category term="phpcs" scheme="http://bravo-kernel.com/tags/phpcs/"/>
    
      <category term="ubuntu" scheme="http://bravo-kernel.com/tags/ubuntu/"/>
    
      <category term="Web" scheme="http://bravo-kernel.com/categories/web/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[How to set up Xdebug for PHP5-FPM on Ubuntu]]></title>
    <link href="http://bravo-kernel.com/2014/09/how-to-set-up-xdebug-for-php5-fpm-on-ubuntu/"/>
    <id>http://bravo-kernel.com/2014/09/how-to-set-up-xdebug-for-php5-fpm-on-ubuntu/</id>
    <published>2014-09-01T08:36:52.000Z</published>
    <updated>2015-03-27T17:53:36.000Z</updated>
    <content type="html"><![CDATA[<p>Install required packages:</p>
<pre><code>$ sudo apt-get <span class="keyword">install</span> php5-dev php-pear
$ sudo pecl <span class="keyword">install</span> xdebug
</code></pre><p>Open file <code>/etc/php5/fpm/php.ini</code> and add the following line to the “Dynamic Extensions” section:</p>
<pre><code><span class="setting">zend_extension=<span class="value"><span class="string">"/usr/lib/php5/20121212/xdebug.so"</span></span></span>
</code></pre><p>Restart PHP:</p>
<pre><code>$ sudo <span class="keyword">service</span> php5-fpm <span class="literal">restart</span>
</code></pre>]]></content>
    <summary type="html">
    <![CDATA[<p>Install required packages:</p>
<pre><code>$ sudo apt-get <span class="keyword">install</span> php5-dev php-pear
$ sudo pecl <span class="]]>
    </summary>
    
      <category term="php" scheme="http://bravo-kernel.com/tags/php/"/>
    
      <category term="ubuntu" scheme="http://bravo-kernel.com/tags/ubuntu/"/>
    
      <category term="xdebug" scheme="http://bravo-kernel.com/tags/xdebug/"/>
    
      <category term="Web" scheme="http://bravo-kernel.com/categories/web/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[How to use variables in MSSQL]]></title>
    <link href="http://bravo-kernel.com/2014/08/how-to-use-variables-in-mssql/"/>
    <id>http://bravo-kernel.com/2014/08/how-to-use-variables-in-mssql/</id>
    <published>2014-08-18T18:41:31.000Z</published>
    <updated>2015-03-27T17:53:36.000Z</updated>
    <content type="html"><![CDATA[<p>To use variables in MSSQL queries simply declare and set them before using:</p>
<pre><code><span class="bullet">--
</span><span class="header">-- Declare and set variables
--</span>
DECLARE @migrationDate VARCHAR(100), @groupName VARCHAR(100)
SET @migrationDate = <span class="emphasis">'2014-08-15'</span>
SET @groupName = <span class="emphasis">'SOME-GROUP-NAME'</span>

<span class="bullet">--
</span><span class="header">-- Execute query using variables
--</span>
SELECT DISTINCT [username]
<span class="code">  ,[groupname]</span>
<span class="code">  ,[migrationdate]</span>
FROM [MYDB].[dbo].[vw<span class="emphasis">_my_</span>special<span class="emphasis">_view]
WHERE [groupname] LIKE @groupName
AND [migrationdate] LIKE @migrationDate</span>
</code></pre>]]></content>
    <summary type="html">
    <![CDATA[<p>To use variables in MSSQL queries simply declare and set them before using:</p>
<pre><code><span class="bullet">--
</span><span class="he]]>
    </summary>
    
      <category term="database" scheme="http://bravo-kernel.com/tags/database/"/>
    
      <category term="mssql" scheme="http://bravo-kernel.com/tags/mssql/"/>
    
      <category term="Database" scheme="http://bravo-kernel.com/categories/database/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[How to reinstall Octopress with Octostrap3 theme on Debian]]></title>
    <link href="http://bravo-kernel.com/2014/08/how-to-reinstall-octopress-with-octostrap3-theme-on-debian/"/>
    <id>http://bravo-kernel.com/2014/08/how-to-reinstall-octopress-with-octostrap3-theme-on-debian/</id>
    <published>2014-08-14T15:44:33.000Z</published>
    <updated>2015-03-27T17:53:36.000Z</updated>
    <content type="html"><![CDATA[<h3 id="Reinstall_Octopress">Reinstall Octopress</h3><pre><code><span class="variable">$ </span>cd [path-to-repos]
<span class="variable">$ </span>git clone git<span class="variable">@github</span>.<span class="symbol">com:</span>[your-github-pages-repo.git] octopress
<span class="variable">$ </span>cd octopress
<span class="variable">$ </span>git checkout source
<span class="variable">$ </span>rake setup_github_pages
</code></pre><h3 id="Re-enable_theme_submodule">Re-enable theme submodule</h3><pre><code><span class="variable">$ </span>git submodule init
<span class="variable">$ </span>git submodule update
<span class="variable">$ </span>cd .themes/octostrap3
<span class="variable">$ </span>git checkout master
</code></pre>]]></content>
    <summary type="html">
    <![CDATA[<h3 id="Reinstall_Octopress">Reinstall Octopress</h3><pre><code><span class="variable">$ </span>cd [path-to-repos]
<span class="variable">$ ]]>
    </summary>
    
      <category term="debian" scheme="http://bravo-kernel.com/tags/debian/"/>
    
      <category term="octopress" scheme="http://bravo-kernel.com/tags/octopress/"/>
    
      <category term="octostrap3" scheme="http://bravo-kernel.com/tags/octostrap3/"/>
    
      <category term="Web" scheme="http://bravo-kernel.com/categories/web/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[How to set up time, date and timezone on Debian]]></title>
    <link href="http://bravo-kernel.com/2014/08/how-to-set-up-time-date-and-timezone-on-debian/"/>
    <id>http://bravo-kernel.com/2014/08/how-to-set-up-time-date-and-timezone-on-debian/</id>
    <published>2014-08-10T11:48:16.000Z</published>
    <updated>2015-03-27T17:53:36.000Z</updated>
    <content type="html"><![CDATA[<h3 id="Display_(incorrect)_time,_date_and_timezone">Display (incorrect) time, date and timezone</h3><pre><code>$ <span class="tag">date</span>
<span class="tag">Wed</span> <span class="tag">Aug</span> 13 23<span class="pseudo">:50</span><span class="pseudo">:50</span> <span class="tag">MSK</span> 2014
</code></pre><h3 id="Show_active_timezone">Show active timezone</h3><pre><code>$ diff -s <span class="regexp">/etc/</span>localtime <span class="regexp">/usr/</span>share<span class="regexp">/zoneinfo/</span>`cat <span class="regexp">/etc/</span>timezone`
Files <span class="regexp">/etc/</span>localtime and <span class="regexp">/usr/</span>share<span class="regexp">/zoneinfo/</span>Europe<span class="regexp">/Moscow are identical</span>
</code></pre><h3 id="Fix_incorrect_timezone">Fix incorrect timezone</h3><pre><code>$ echo -e <span class="string">"Europe/Amsterdam"</span> | sudo tee <span class="regexp">/etc/</span>timezone
$ sudo cp <span class="regexp">/usr/</span>share<span class="regexp">/zoneinfo/</span>Europe<span class="regexp">/Amsterdam /</span>etc<span class="regexp">/localtime</span>
</code></pre><h3 id="Install_ntp_client">Install ntp client</h3><pre><code>$ sudo apt-get install ntp
Setting up ntp (<span class="number">1</span>:<span class="number">4.2</span><span class="number">.6</span>.p5+dfsg-<span class="number">2</span>) <span class="keyword">...</span>
[ ok ] Starting NTP server: ntpd.
</code></pre><h3 id="View_corrected_time,_date_and_timezone">View corrected time, date and timezone</h3><pre><code>$ <span class="tag">date</span>
<span class="tag">Thu</span> <span class="tag">Aug</span> 14 21<span class="pseudo">:55</span><span class="pseudo">:03</span> <span class="tag">CEST</span> 2014
</code></pre>]]></content>
    <summary type="html">
    <![CDATA[<h3 id="Display_(incorrect)_time,_date_and_timezone">Display (incorrect) time, date and timezone</h3><pre><code>$ <span class="tag">date</sp]]>
    </summary>
    
      <category term="debian" scheme="http://bravo-kernel.com/tags/debian/"/>
    
      <category term="time" scheme="http://bravo-kernel.com/tags/time/"/>
    
      <category term="wheezy" scheme="http://bravo-kernel.com/tags/wheezy/"/>
    
      <category term="Linux" scheme="http://bravo-kernel.com/categories/linux/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[How to create a new CakePHP application using FriendsOfCake app-template]]></title>
    <link href="http://bravo-kernel.com/2014/08/how-to-create-a-new-cakephp-application-using-friendsofcake-app-template/"/>
    <id>http://bravo-kernel.com/2014/08/how-to-create-a-new-cakephp-application-using-friendsofcake-app-template/</id>
    <published>2014-08-10T07:31:56.000Z</published>
    <updated>2015-03-27T17:53:36.000Z</updated>
    <content type="html"><![CDATA[<p>This will create a new CakePHP application using the awesome <a href="https://github.com/FriendsOfCake/app-template" title="FriendsOfCake app-template" target="_blank" rel="external">FriendsOfCake app-template</a>.</p>
<p>Make sure you have:</p>
<ul>
<li>installed Composer (see <a href="/blog/2014/08/how-to-install-composer-on-debian/" title="How to install Composer on Debian">“How to install Composer on Debian”</a>)</li>
<li>created an empty Github repository (we’ll call it Debby)</li>
</ul>
<h3 id="Install_app-template">Install app-template</h3><pre><code>$ cd [path-to-repos]
$ sudo apt-get install php5-mcrypt
$ git clone https://github.com/<span class="type">FriendsOfCake</span>/app-<span class="keyword">template</span>.git friendsofcake/app-<span class="keyword">template</span>
</code></pre><h3 id="Generate_app">Generate app</h3><pre><code>$ composer -sdev create-project friendsofcake/app-<span class="keyword">template</span> debby
</code></pre><h3 id="Save_app">Save app</h3><pre><code><span class="char">$ </span>cd debby
<span class="char">$ </span>git init
<span class="char">$ </span>git add .
<span class="char">$ </span>git add tmp/ -f
<span class="char">$ </span>git commit -m <span class="comment">"Initial FriendsOfCake app-template"</span>
<span class="char">$ </span>git remote add origin git@github.<span class="method">com:</span>&lt;gh-username&gt;/debby.git
<span class="char">$ </span>git push -u origin master
</code></pre>]]></content>
    <summary type="html">
    <![CDATA[<p>This will create a new CakePHP application using the awesome <a href="https://github.com/FriendsOfCake/app-template" title="FriendsOfCake]]>
    </summary>
    
      <category term="cakephp" scheme="http://bravo-kernel.com/tags/cakephp/"/>
    
      <category term="foc" scheme="http://bravo-kernel.com/tags/foc/"/>
    
      <category term="Web" scheme="http://bravo-kernel.com/categories/web/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[How to install Composer on Debian]]></title>
    <link href="http://bravo-kernel.com/2014/08/how-to-install-composer-on-debian/"/>
    <id>http://bravo-kernel.com/2014/08/how-to-install-composer-on-debian/</id>
    <published>2014-08-10T07:27:48.000Z</published>
    <updated>2015-03-27T17:53:36.000Z</updated>
    <content type="html"><![CDATA[<p>To make Composer (globally) available on Debian:</p>
<pre><code><span class="variable">$ </span>cd /usr/src
<span class="variable">$ </span>sudo apt-get install curl php5-cli
<span class="variable">$ </span>curl -sS <span class="symbol">https:</span>/<span class="regexp">/getcomposer.org/installer</span> | sudo php
<span class="variable">$ </span>sudo mv composer.phar /usr/bin/composer
</code></pre><p>Verify installation:</p>
<pre><code>$ composer <span class="comment">--version</span>
Composer <span class="property">version</span> <span class="number">4</span>ecdbf89c4a3d1e5dfe73c57e3202a5e2a18c87e <span class="number">2014</span>-<span class="number">07</span>-<span class="number">28</span> <span class="number">20</span>:<span class="number">12</span>:<span class="number">27</span>
</code></pre>]]></content>
    <summary type="html">
    <![CDATA[<p>To make Composer (globally) available on Debian:</p>
<pre><code><span class="variable">$ </span>cd /usr/src
<span class="variable">$ </sp]]>
    </summary>
    
      <category term="composer" scheme="http://bravo-kernel.com/tags/composer/"/>
    
      <category term="debian" scheme="http://bravo-kernel.com/tags/debian/"/>
    
      <category term="wheezy" scheme="http://bravo-kernel.com/tags/wheezy/"/>
    
      <category term="Web" scheme="http://bravo-kernel.com/categories/web/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[How to install a Debian LEMP server]]></title>
    <link href="http://bravo-kernel.com/2014/08/how-to-install-a-debian-lemp-server/"/>
    <id>http://bravo-kernel.com/2014/08/how-to-install-a-debian-lemp-server/</id>
    <published>2014-08-10T07:26:05.000Z</published>
    <updated>2015-03-27T17:53:36.000Z</updated>
    <content type="html"><![CDATA[<p>This will install a LEMP server with nginx, MySQL and PHP-fpm on Debian Wheezy in 5 minutes.</p>
<h3 id="Install_required_packages">Install required packages</h3><pre><code>$ sudo apt-get <span class="operator"><span class="keyword">update</span>
$ sudo apt-<span class="keyword">get</span> <span class="keyword">install</span> mysql-<span class="keyword">server</span> php5-mysql nginx php5-fpm</span>
</code></pre><h3 id="Enable_PHP">Enable PHP</h3><p>Open file <code>/etc/nginx/sites-available/default</code> as root and replace line</p>
<pre><code><span class="keyword">index</span> <span class="keyword">index</span>.html <span class="keyword">index</span>.htm;
</code></pre><p>with :</p>
<pre><code><span class="keyword">index</span> <span class="keyword">index</span>.php <span class="keyword">index</span>.html <span class="keyword">index</span>.htm;
</code></pre><p>In the same file, replace the <code>php$</code> section with:</p>
<pre><code><span class="title">location</span> <span class="regexp">~ \.php$</span> {
    <span class="title">try_files</span> <span class="variable">$uri</span> =<span class="number">404</span>;
    <span class="title">fastcgi_pass</span> <span class="url">unix:/var/run/php5-fpm.sock</span>;
    <span class="title">fastcgi_index</span> index.php;
    <span class="title">fastcgi_param</span>  SCRIPT_FILENAME  <span class="variable">$document_root</span><span class="variable">$fastcgi_script_name</span>;
    <span class="title">include</span> /etc/nginx/fastcgi_params;
}
</code></pre><h3 id="Round_up">Round up</h3><p>Create a simple index.php:</p>
<pre><code>$ <span class="built_in">echo</span> <span class="operator">-e</span> <span class="string">'&amp;lt;?php echo "PHP index"; ?&amp;gt;'</span> | sudo tee /usr/share/nginx/www/index.php
</code></pre><p>Restart nginx:</p>
<pre><code><span class="variable">$ </span>sudo /etc/init.d/nginx restart
</code></pre><h3 id="All_done">All done</h3><p>Browse to your server, it should display <code>PHP index</code>.</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>This will install a LEMP server with nginx, MySQL and PHP-fpm on Debian Wheezy in 5 minutes.</p>
<h3 id="Install_required_packages">Insta]]>
    </summary>
    
      <category term="debian" scheme="http://bravo-kernel.com/tags/debian/"/>
    
      <category term="nginx" scheme="http://bravo-kernel.com/tags/nginx/"/>
    
      <category term="wheezy" scheme="http://bravo-kernel.com/tags/wheezy/"/>
    
      <category term="Linux" scheme="http://bravo-kernel.com/categories/linux/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[How to fix Octopress build warning Layout nil requested]]></title>
    <link href="http://bravo-kernel.com/2014/08/how-to-fix-octopress-build-warning-layout-nil-requested/"/>
    <id>http://bravo-kernel.com/2014/08/how-to-fix-octopress-build-warning-layout-nil-requested/</id>
    <published>2014-08-09T08:18:57.000Z</published>
    <updated>2015-03-27T17:53:36.000Z</updated>
    <content type="html"><![CDATA[<p>When rake_generate produces errors like this:</p>
<pre><code>Build <span class="string">Warning:</span> Layout <span class="string">'nil'</span> requested <span class="keyword">in</span> blog<span class="regexp">/tags/</span>git/atom.xml does not exist.
</code></pre><p>Fix by replacing:</p>
<pre><code><span class="attribute">layout</span>: <span class="string">nil</span>
</code></pre><p>with:</p>
<pre><code><span class="string">layout:</span> <span class="literal">null</span>
</code></pre><p>in files:</p>
<ul>
<li><code>source/atom.xml</code></li>
<li><code>source/robots.txt</code></li>
<li><code>source/_includes/custom/category_feed.xml</code></li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<p>When rake_generate produces errors like this:</p>
<pre><code>Build <span class="string">Warning:</span> Layout <span class="string">'nil']]>
    </summary>
    
      <category term="octopress" scheme="http://bravo-kernel.com/tags/octopress/"/>
    
      <category term="Web" scheme="http://bravo-kernel.com/categories/web/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[How to install Octopress with GSL on Debian]]></title>
    <link href="http://bravo-kernel.com/2014/08/how-to-install-octopress-with-gsl-on-debian/"/>
    <id>http://bravo-kernel.com/2014/08/how-to-install-octopress-with-gsl-on-debian/</id>
    <published>2014-08-09T07:25:23.000Z</published>
    <updated>2015-03-27T17:53:36.000Z</updated>
    <content type="html"><![CDATA[<p>This will install Octopress with GSL (for 10x faster LSI support) on Debian Wheezy in 5 minutes.</p>
<p>Make sure you have created a <a href="https://pages.github.com/" target="_blank" rel="external">Github-pages</a> repository first.</p>
<h2 id="Install_required_packages">Install required packages</h2><pre><code>sudo apt-<span class="built_in">get</span> <span class="keyword">update</span>
sudo apt-<span class="built_in">get</span> install <span class="keyword">ruby</span> <span class="keyword">ruby</span>-dev <span class="keyword">ruby</span>-gsl build-essential
</code></pre><h2 id="Install_GSL">Install GSL</h2><p>We enable GSL to speed up page generation and remove this annoying <code>rake_generate</code> warning:</p>
<pre><code><span class="string">Notice:</span> <span class="keyword">for</span> <span class="number">10</span>x faster LSI support, please install <span class="string">http:</span><span class="comment">//rb-gsl.rubyforge.org/</span>
</code></pre><p>Compile by running:</p>
<pre><code>cd /usr/src
sudo wget http:<span class="comment">//ftp.gnu.org/gnu/gsl/gsl-1.14.tar.gz</span>
sudo tar xvf gsl-<span class="number">1.14</span><span class="class">.tar</span><span class="class">.gz</span>
sudo gsl-<span class="number">1.14</span>/configure
sudo make
sudo make install
</code></pre><p>Running this command should return <code>1.14</code>:</p>
<pre><code>gsl-config <span class="comment">--version</span>
</code></pre><h2 id="Install_Octopress">Install Octopress</h2><pre><code><span class="keyword">cd</span> /&lt;path-<span class="keyword">to</span>-repos&gt;
git clone gi<span class="variable">t:</span>//github.<span class="keyword">com</span>/imathis/octopress.git octopress
<span class="keyword">cd</span> octopress
</code></pre><p>Open file <code>_config.yml</code> and add the following line:</p>
<pre><code><span class="string">lsi:</span> <span class="literal">true</span>
</code></pre><p>Prevent build warnings caused by missing ‘nil’ layout:</p>
<pre><code>touch <span class="keyword">source</span><span class="regexp">/_layouts/</span>nil.html
</code></pre><h2 id="Install_gems">Install gems</h2><p>Open file <code>Gemfile</code> and add the following lines to the development group:</p>
<pre><code><span class="title">gem</span> <span class="string">'execjs'</span>
gem <span class="string">'therubyracer'</span>
gem <span class="string">'gsl'</span>
</code></pre><p>Install gems by running:</p>
<pre><code>sudo gem <span class="keyword">install</span> bundler
bundle <span class="keyword">install</span>
</code></pre><h2 id="Install_Rake">Install Rake</h2><p>Open file <code>Rakefile</code> and replace line 256:</p>
<pre><code>Bundler.with_clean_env { <span class="keyword">system</span> <span class="string">"git pull"</span> }
</code></pre><p>with:</p>
<pre><code>Bundler.with_clean_env { system <span class="string">"git pull origin <span class="subst">#{deploy_branch}</span>"</span> }
</code></pre><p>Set up Rake by running:</p>
<pre><code>rake <span class="keyword">install</span>
rake setup_github_pages
</code></pre><h2 id="All_done">All done</h2><p>That’s all there’s to it. You are now</p>
<ul>
<li>in Git branch <code>source</code> (never work in <code>master</code>!)</li>
<li>ready to create your first post</li>
</ul>
<h2 id="Reinstalling?">Reinstalling?</h2><p>See <a href="/blog/2014/08/how-to-reinstall-octopress-with-octostrap3-theme-on-debian" title="How to reinstall Octopress with Octostrap3 theme on Debian">“How to reinstall Octopress with Octostrap3 theme on Debian”</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>This will install Octopress with GSL (for 10x faster LSI support) on Debian Wheezy in 5 minutes.</p>
<p>Make sure you have created a <a h]]>
    </summary>
    
      <category term="debian" scheme="http://bravo-kernel.com/tags/debian/"/>
    
      <category term="octopress" scheme="http://bravo-kernel.com/tags/octopress/"/>
    
      <category term="wheezy" scheme="http://bravo-kernel.com/tags/wheezy/"/>
    
      <category term="Linux" scheme="http://bravo-kernel.com/categories/linux/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[How to set up sudo on Debian]]></title>
    <link href="http://bravo-kernel.com/2014/08/how-to-set-up-sudo-on-debian/"/>
    <id>http://bravo-kernel.com/2014/08/how-to-set-up-sudo-on-debian/</id>
    <published>2014-08-09T07:24:40.000Z</published>
    <updated>2015-03-27T17:53:36.000Z</updated>
    <content type="html"><![CDATA[<p>To install sudo and add <username\> to the sudoers group run:</username\></p>
<pre><code>apt-<span class="keyword">get</span> install sudo
adduser &lt;username&gt; sudo
</code></pre><p><strong>Note:</strong> <username\> must logout and login to effectuate new group membership (and thus sudo).</username\></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>To install sudo and add <username\> to the sudoers group run:</username\></p>
<pre><code>apt-<span class="keyword">get</span> install sud]]>
    </summary>
    
      <category term="debian" scheme="http://bravo-kernel.com/tags/debian/"/>
    
      <category term="Linux" scheme="http://bravo-kernel.com/categories/linux/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[How to configure Git private email]]></title>
    <link href="http://bravo-kernel.com/2014/08/how-to-configure-git-private-email/"/>
    <id>http://bravo-kernel.com/2014/08/how-to-configure-git-private-email/</id>
    <published>2014-08-09T07:24:14.000Z</published>
    <updated>2015-03-27T17:53:36.000Z</updated>
    <content type="html"><![CDATA[<p>This will keep your email address private:</p>
<pre><code>git config --global user<span class="class">.name</span> <span class="string">"username"</span>
git config --global user<span class="class">.email</span> <span class="string">"username@users.noreply.github.com"</span>
</code></pre>]]></content>
    <summary type="html">
    <![CDATA[<p>This will keep your email address private:</p>
<pre><code>git config --global user<span class="class">.name</span> <span class="string">"]]>
    </summary>
    
      <category term="git" scheme="http://bravo-kernel.com/tags/git/"/>
    
      <category term="Git" scheme="http://bravo-kernel.com/categories/git/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[How to fix Git commit insufficient permission error]]></title>
    <link href="http://bravo-kernel.com/2014/08/how-to-fix-git-commit-insufficient-permission-error/"/>
    <id>http://bravo-kernel.com/2014/08/how-to-fix-git-commit-insufficient-permission-error/</id>
    <published>2014-08-05T12:45:52.000Z</published>
    <updated>2015-03-27T17:53:36.000Z</updated>
    <content type="html"><![CDATA[<p>When <code>git commit</code> gives this error:</p>
<pre><code><span class="keyword">error</span>: insufficient permission <span class="keyword">for</span> adding an <span class="built_in">object</span> <span class="keyword">to</span> repository database .git/objects
</code></pre><p>take back ownership of all Git objects by runnning:</p>
<pre><code>cd <span class="variable">&lt;path-to-repo&gt;</span>
cd .git/objects
sudo chown -R <span class="variable">&lt;username&gt;</span>:<span class="variable">&lt;username&gt;</span> <span class="keyword">*</span>
</code></pre>]]></content>
    <summary type="html">
    <![CDATA[<p>When <code>git commit</code> gives this error:</p>
<pre><code><span class="keyword">error</span>: insufficient permission <span class="ke]]>
    </summary>
    
      <category term="git" scheme="http://bravo-kernel.com/tags/git/"/>
    
      <category term="Git" scheme="http://bravo-kernel.com/categories/git/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[How to maintain your personal Octostrap3 theme]]></title>
    <link href="http://bravo-kernel.com/2014/08/how-to-maintain-your-personal-octostrap3-theme/"/>
    <id>http://bravo-kernel.com/2014/08/how-to-maintain-your-personal-octostrap3-theme/</id>
    <published>2014-08-04T09:22:47.000Z</published>
    <updated>2015-03-27T17:53:36.000Z</updated>
    <content type="html"><![CDATA[<p>Make sure you have created a personal fork of the <a href="https://github.com/kAworu/octostrap3" title="Octostrap3 repository" target="_blank" rel="external">Octostrap3 repository</a>.</p>
<h2 id="Add_theme_as_a_Git_submodule">Add theme as a Git submodule</h2><p>Add personal Octostrap3 theme as a Git submodule:</p>
<pre><code>cd &lt;path-to-repos&gt;/octopress
git submodule add git@github<span class="class">.com</span>:bravo-kernel/octostrap3<span class="class">.git</span> .themes/octostrap3
git add <span class="class">.gitmodules</span>
git commit -m <span class="string">"Adding Octostrap3 as a Git submodule"</span>
git push origin
</code></pre><h2 id="Update_theme">Update theme</h2><pre><code><span class="built_in">cd</span> &lt;<span class="built_in">path</span>-to-repos&gt;/octopress
<span class="built_in">cd</span> .themes/octostrap3
git checkout master
</code></pre><p>Edit some files (see the <a href="http://octopress.org/docs/theme" title="Octopress documentation on themes" target="_blank" rel="external">Octopress theme documentation</a>).</p>
<h2 id="Install_updated_theme">Install updated theme</h2><p>Install updated theme (or it will not be used when when generating new pages):</p>
<pre><code><span class="keyword">cd</span> &lt;path-<span class="keyword">to</span>-repos&gt;/octopress
rake <span class="string">'install[octostrap3]'</span>
</code></pre><h2 id="Generate_pages_using_updated_theme">Generate pages using updated theme</h2><p>Generate and deploy gh-pages using the updated theme:</p>
<pre><code>  <span class="built_in">cd</span> &lt;<span class="built_in">path</span>-to-repos&gt;/octopress
rake generate
rake deploy
</code></pre><h2 id="Save_updated_theme">Save updated theme</h2><pre><code><span class="keyword">cd</span> &lt;path-<span class="keyword">to</span>-repos&gt;/octopress/.themes/octostrap3
git <span class="built_in">add</span> .
git commit -<span class="keyword">m</span> <span class="string">"Updating Octostrap3 theme"</span>
git push origin
</code></pre><h2 id="Update_Git_submodule">Update Git submodule</h2><p>Point Git theme submodule to the latest version:</p>
<pre><code><span class="keyword">cd</span> &lt;path-<span class="keyword">to</span>-repos&gt;/octopress
git <span class="built_in">add</span> .themes/octostrap3
git commit -<span class="keyword">m</span> <span class="string">"Updating octostrap3 submodule"</span>
git push origin
</code></pre>]]></content>
    <summary type="html">
    <![CDATA[<p>Make sure you have created a personal fork of the <a href="https://github.com/kAworu/octostrap3" title="Octostrap3 repository" target="_b]]>
    </summary>
    
      <category term="octopress" scheme="http://bravo-kernel.com/tags/octopress/"/>
    
      <category term="octostrap3" scheme="http://bravo-kernel.com/tags/octostrap3/"/>
    
      <category term="web" scheme="http://bravo-kernel.com/categories/web/"/>
    
  </entry>
  
</feed>